name: tests

on: 
  push:
      branches:
          - master

jobs:
  tests:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        #ffi: ['','ffi']
        include:
          - name: PHP8.1
            os: ubuntu-latest
            php: '8.1'
            phpunit: '10.5'
          - name: PHP8.3
            os: ubuntu-latest
            php: '8.3'
            phpunit: '11.5'
          - name: PHP8.4
            os: ubuntu-latest
            php: '8.4'
            phpunit: '11.5'
          - name: Windows
            os: windows-latest
            php: '8.4'
            phpunit: '11.5'
#          - name: macOS
#            os: macos-latest
#            php: '8.4'
#            phpunit: '11.5'

    steps:
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          # PHP Extras
          coverage: none
          tools: composer, phpunit:${{ matrix.phpunit }}, phpstan
          ini-values: "memory_limit=512M"
          # extensions: ${{ matrix.ffi }}

      #- name: Install Libs
      #  run: |
      #    if [ 'ffi' == '${{ matrix.ffi }}' ] ; then
      #      sudo apt install -y libopenblas-base liblapacke
      #      wget https://github.com/rindow/rindow-matlib/releases/download/1.0.0/rindow-matlib_1.0.0_amd64.deb
      #      sudo apt install -y ./rindow-matlib_1.0.0_amd64.deb
      #      sudo update-alternatives --set librindowmatlib.so /usr/lib/rindowmatlib-serial/librindowmatlib.so
      #    fi

      - name: Checkout codes
        uses: "actions/checkout@v4"

      #- name: Composer
      #  uses: php-actions/composer@v6
      #  with:
      #    php_version: ${{ matrix.php }}

      #- name: Composer
      #  run: |
      #    composer update
      #    if [ 'ffi' == '${{ matrix.ffi }}' ] ; then
      #      mkdir addpack
      #      ( cd addpack && composer require rindow/rindow-math-matrix-matlibffi )
      #    fi

      - name: Composer
        run: composer update

      #- name: PHP Static Analysys
      #  uses: php-actions/phpstan@v3
      #  with:
      #    php_version: ${{ matrix.php }}
      #    path: src/

      - name: PHP Static Analysys
        run: phpstan

      #- name: PHPUnit Tests
      #  uses: php-actions/phpunit@v3
      #  with:
      #    configuration: tests/phpunit.xml
      #    version: ${{ matrix.phpunit }}
      #    php_version: ${{ matrix.php }}
      #    memory_limit: 512M

      - name: PHPUnit Tests
        run: phpunit -c tests
